<?php
/**
 * $Id: PatternEditableTableSqlQuery.inc,v 1.21 2005/06/07 20:38:21 nbm Exp $
 *
 * Will take a query that generates a table like
 * result and create and editable HTML table from it that can
 * be used as part of a form.  
 *
 * 1 columns is REQUIRED in the Sql query:
 *		o column giving primary key of entry in table (primary key column name specified in $aPrimaryKey)
 *
 * 3 hidden fields are generated for each editable entry:
 *	o <uniquename>_id:		holds the primary key of the entry in the table (-1 = no entry in table i.e. create not update)
 *	o <uniquename>_tn: 		holds the tablename for which the primary key is valid
 *	o <uniquename>_type:	holds the type of entry (text/boolean/list) - for parsing purposes
 *
 * The actual value is held in a form field name <uniquename>
 *
 * Copyright (c) 2003 Jam Warehouse http://www.jamwarehouse.com
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
 *
 * @version $Revision: 1.21 $
 * @author Rob Cherry, Jam Warehouse (Pty) Ltd, South Africa
 * @package lib.visualpatterns
 * @todo - add client side validation stuff
 * @todo - add column type 3 -> select field stuff 
 */

//require_once("../../../../calendar/dhtmlgoodies_calendar/dhtmlgoodies_calendar.css");


require_once("PatternListBox3.inc");

class PatternEditableTableSqlQuery {
	
	/** query to execute*/
	var $sQuery;
	/** table to perform insert/update on */
	var $sTableName;
	/** columns names in $sQuery to display */
	var $aDisplayColumnNames;
	/** column names in $sQuery that will be stored/updated */
	var $aStoreColumnNames;
	/** Array of boolean values dictating column editability */
	var $aColumnsEditable;
	/** columns visible or not (store columns) */
	var $aColumnsVisible;
	/** column types: 1 = text, 2 = boolean, 3 = drop down list, 4 = meta data lookup */
	var $aColumnDisplayTypes;
	/** 0 = id, 1 = text, 2 = boolean*/
	var $aColumnDatabaseTypes;
	/** Unique name */
	var $sUniqueName;
	/** message that will be displayed if the table is empty*/
	var $sEmptyTableMessage;
	/** whether or not to include javascript validation rendering automatically */
	var $bRenderJavascriptValidation = true;
	/** temporary array holding the required fields */
	var $aRequiredVariables;
	
	var $aRequiredColumnNames;
	var $aRequiredFieldNames;
	var $aMetaDataields;	
	
	function PatternEditableTableSqlQuery($sTmpQuery, $sTmpTableName, $aTmpStoreColumnNames, $aTmpDisplayColumnNames, $aTmpColumnsEditable, $aTmpColumnsVisible, $aTmpColumnDisplayTypes, $aTmpColumnDatabaseTypes) {
		$this->sQuery = $sTmpQuery;
		$this->sTableName = $sTmpTableName;
		$this->aStoreColumnNames = $aTmpStoreColumnNames;
		$this->aDisplayColumnNames = $aTmpDisplayColumnNames;		
		$this->aColumnsEditable = $aTmpColumnsEditable;
		$this->sUniqueName = $sTmpUniqueName;
		$this->aColumnsVisible = $aTmpColumnsVisible;
		$this->aColumnDisplayTypes = $aTmpColumnDisplayTypes;		
		$this->aColumnDatabaseTypes = $aTmpColumnDatabaseTypes;
	}
	
	function setUniqueName($sNewValue) {
		$this->sUniqueName = $sNewValue;
	}
	
	function setMetaDataFields($aNewValue) {		
		$this->aMetaDataFields = $aNewValue;
	}
	
	function setDisplayColumnHeadings($bNewValue) {
		$this->bDisplayColumnHeadings = $bNewValue;	
	}
	
	function setTableCaption($sNewValue) {
		$this->sTableCaption = $sNewValue;
	}
	
	function setColumnHeaderNames($aNewValue) {
		$this->aColumnHeaderNames = $aNewValue;
	}
	
	/*function getRequiredVariableNames() {
		return $this->aRequiredVariableNames;
	}*/
	
	function setRequiredColumnNames($aNewValue) {
		$this->aRequiredColumnNames = $aNewValue;
	}
	
	function setEmptyTableMessage($sNewValue) {
		$this->sEmptyTableMessage = $sNewValue;
	}
	
	function setRenderJavascriptValidation($bNewValue) {
		$this->bRenderJavascriptValidation = $bNewValue;
	}
	


	function & render() {
        global $default;
        
		$sToRender = "<table cellpadding=\"5\" border=\"0\">\n";
		if (isset($this->sTableCaption)) {
			$sToRender .= "<caption align=\"top\" colspan=\"" . count($this->aColumnsSql) . "\" align=\"left\"><b>$this->sTableCaption</b></caption>\n";
		}
		if ($this->bDisplayColumnHeadings) {
			for ($i = 0; $i < count($this->aColumnHeaderNames); $i++) {				 
				$sToRender .= "<th align=left>" . $this->aColumnHeaderNames[$i] . "</th>\n";
			}
		}
        
        $this->sUniqueName .= KTUtil::randomString();
        
		$sql = $default->db;
		$sql->query($this->sQuery);
		if ($sql->num_rows() == 0) {
			$sToRender .= "<tr>\n";
			if (isset($this->sEmptyTableMessage)) {
				$sToRender .= "<td colspan=" . count($this->aStoreColumnNames) . ">$this->sEmptyTableMessage</td>\n";
			} else {
				$sToRender .= "<td colspan=" . count($this->aStoreColumnNames) . ">" .
                    sprintf(_("No %s data"), (isset($this->sTableCaption) ? $this->sTableCaption : "")) .
                    "</td>\n";
			}
			$sToRender .= "</tr>\n";		
		} else {
			$this->aRequiredVariables = array();
			$iRowCount = 0;
			while ($sql->next_record()) {				
				$sToRender .= "<tr>\n";
                $_SESSION["pelfq_" . $this->sUniqueName . $iRowCount . "_id"] = $sql->f("id");
                $_SESSION["pelfq_" . $this->sUniqueName . $iRowCount . "_tn"] = $this->sTableName;
                $_SESSION["pelfq_" . $this->sUniqueName . $iRowCount . "_columns"] = $this->aStoreColumnNames;
				$sToRender .= "<input type=\"hidden\" name=\"unique_start_" . $this->sUniqueName . $iRowCount . "\" value=\"\" />\n";
				// $sToRender .= "<input type=\"hidden\" name=\"" . $this->sUniqueName . "_" . $iRowCount . "\" value=\"" . $sql->f("id") . "\" />\n";
				// $sToRender .= "<input type=\"hidden\" name=\"" . $this->sUniqueName . "_" . $iRowCount . "_tn\" value=\"" . $this->sTableName . "\" />\n";
                
                // check for is_mandatory field validation
                if ($sql->f("is_mandatory") == "1") {
                    $this->aRequiredVariables[]["formName"] = $this->sUniqueName . "_" . $iRowCount . (count($this->aStoreColumnNames)-1) . "_value";
                }                
				for ($i = 0; $i < count($this->aStoreColumnNames); $i++) {					
					if (isset($this->aRequiredColumnNames)) {
						for ($k = 0; $k < count($this->aRequiredColumnNames); $k++) {
							if (strcmp($this->aStoreColumnNames[$i], $this->aRequiredColumnNames[$k]) == 0) {								
								$this->aRequiredVariables[count($this->aRequiredVariables)]["formName"] = $this->sUniqueName . "_" . $iRowCount . $i . "_value";
							}
						}
					}
					
					//generate the right kind of editable field
					$sToRender .= "\t<td>\n";
					switch ($this->aColumnDisplayTypes[$i]) {
						case 1: 
							//output the table column name
							$sToRender .= "\t<input type=\"hidden\" name=\"" . $this->sUniqueName . "_" . $iRowCount . $i . "_tc\" value=\"" . $this->aStoreColumnNames[$i] . "\" />\n";
							//output the column type
							$sToRender .= "\t<input type=\"hidden\" name=\"" . $this->sUniqueName . "_" . $iRowCount . $i . "_type\" value=\"" . $this->aColumnDatabaseTypes[$i] . "\" />\n";
							//output the value
							if ($this->aColumnsVisible[$i]) {
								if ($this->aColumnsEditable[$i]) {
									$sToRender .= "\t<input type=\"text\" name=\"" . $this->sUniqueName . "_" . $iRowCount . $i . "_value\" value=\"" . $sql->f($this->aStoreColumnNames[$i]) . "\" />\n";
								} else {
								   $nombre=$sql->f($this->aDisplayColumnNames[$i]);
								  $partes=explode(" ",$nombre);
								}
 
		
				 //============ if insertado para desaparecer category ===========>>
				//======== en esta parte se desaparece la parte Category del sistema =========>>>>>

								  if  (!strcmp($partes[0],"Category")){
								    $sToRender .= "\t<input type=\"hidden\" name=\"77777" . $this->sUniqueName . "_" . $iRowCount . $i . "_value\" value=\"" . $sql->f($this->aStoreColumnNames[$i]) . "\" />";
								  }else{

  //====aqui seguimos un procedimiento si dice k_ y otro para el resto <<====//
 //==========>> manipulacion de nombres de campos para desaparecer la "k" de los campos llave <<==================//


  $partes2=explode("_",$nombre);


  if  (strncmp($partes2[0],"k",1)===0)
   {
$zcampo=$partes2[1];
if (count($partes2)> 2)
{
$partes2[1]=$partes2[2];
}

$sToRender .= "\t<input type=\"hidden\" name=\"" . $this->sUniqueName . "_" . $iRowCount . $i . "_value\" value=\"" . $sql->f($this->aStoreColumnNames[$i]) . "\" />" . $partes2[1]."\n"; 

if  (strncmp($zcampo,"zLugares",8)===0)
{    
        $sToRender .= "<script type=\"text/javascript\" src=\"$default->rootUrl/ajax.js\"></script>\n";
	$sToRender .= "<script type=\"text/javascript\">\n";

	$sToRender .= "var ajax2 = new Array();\n";

	$sToRender .= "function opta(sel,nom,nom2,iddoc)\n";
	$sToRender .= "{\n";
	$sToRender .= "getLugaresList(sel,nom,iddoc)\n";
	$sToRender .= "getLugaresList(sel,nom2,iddoc)\n";
	$sToRender .= "}\n";


	$sToRender .= "function getLugaresList(sel,nombr,iddoc)\n";
	$sToRender .= "{\n";
	$sToRender .= "	var countryCode = sel.options[sel.selectedIndex].value;\n";
        $sToRender .= "countryCode2 = 'us';\n";
	$sToRender .= "	document.getElementById(nombr).options.length = 0;	// Empty city select box\n";
	$sToRender .= "	if(countryCode.length>0){\n";
	$sToRender .= "		var index = ajax2.length;\n";
	$sToRender .= "		ajax2[index] = new sack();\n";
	$sToRender .= "	ajax2[index].requestFile = '$default->rootUrl/control.php?action=GetLugaresList&countryCode='+countryCode2+'&idd='+iddoc+'&cc='+countryCode;\n";
        $sToRender .= "		ajax2[index].onCompletion = function(){ createLugar(index,nombr) };     \n";
	$sToRender .= "		ajax2[index].runAJAX();	       \n";
	$sToRender .= "	}\n";
	$sToRender .= "}\n";

	$sToRender .= "function createLugar(index,nombr)\n";
	$sToRender .= "{\n";
	$sToRender .= "	var obj = document.getElementById(nombr);\n";
	$sToRender .= "	eval(ajax2[index].response);	\n";
	$sToRender .= "}\n";

		
	$sToRender .= "</script>\n";




 

//asas
$sToRender .= "<input type=\"hidden\" name=\"unique_exception_" . $this->sUniqueName . $iRowCount . "\" value=\"\" />\n";


	//output the table column name
        $nombresel= $this->sUniqueName . "_a" . $iRowCount . $i."_ignorar";

	$oPatternListBox3 = & new PatternListBox3("$default->document_table", "ST.name", "id","$nombresel" );
	$elqueriux = "SELECT dos AS display, id AS value from  `Lugares`.Pais order by dos";
        $oPatternListBox3-> setQuery($elqueriux);
        $nombres1=$this->sUniqueName . "_b" . $iRowCount . $i."_ignorar";
        $selenforma.= $this->sUniqueName . "_" . $iRowCount; 
        $imas3=$i+1;
        $selenforma.= $imas3."_value"; 
        //$elonchange="getLugaresList(this,'".$nombres1."','Estado')";
        $elonchange="opta(this,'".$nombres1."','".$selenforma."','Estado')";
        $nombre3=$this->sUniqueName . "_a" . $iRowCount . $i."_ignorar";
        $oPatternListBox3->setSelectName($nombre3);
      $oPatternListBox3->setPostBackOnChange(true);
        $oPatternListBox3-> setOnChangeAction($elonchange);	
	$sToRender.= $oPatternListBox3->render();

         $sToRender .= "<input type=\"hidden\" name=\"unique_exception_b" . $this->sUniqueName . $iRowCount . "\" value=\"\" />\n";


	//output the table column name

$onchange="onChange=\"getLugaresList(this,'".$this->sUniqueName . "_c" . $iRowCount . $i."_ignorar"."','Lugares_0')\"";
//$onchange="onChange=\"opta(this,'".$this->sUniqueName . "_c" . $iRowCount . $i."_ignorar"."','".$selenforma."','Lugares_0')\"";
 
 
$sToRender .= "<SELECT ID = \"" . $this->sUniqueName . "_b" . $iRowCount . $i."_ignorar\" ".$onchange."  NAME=\"" . $this->sUniqueName . "_b" . $iRowCount . $i."_ignorar\" ".$onchange."   SIZE=\"1\">";
 $sToRender .= "<OPTION VALUE=\"\">Elija un Pais primero </OPTION></SELECT>";

$sToRender .= "<input type=\"hidden\" name=\"unique_exception_c" . $this->sUniqueName . $iRowCount . "\" value=\"\" />\n";


	//output the table column name

$onchange = "onChange=\"getLugaresList(this,'";
$onchange.= $this->sUniqueName . "_" . $iRowCount; 
$imas=$i+1;
$onchange.= $imas."_value"; 
$onchange.="','Lugares')\" ";
 
$sToRender .= "<SELECT  ID=\"" . $this->sUniqueName . "_c" . $iRowCount . $i."_ignorar\" ".$onchange." NAME=\"" . $this->sUniqueName . "_c" . $iRowCount . $i."_ignorar\" ".$onchange."   SIZE=\"1\">";
 $sToRender .= "<OPTION VALUE=\"\">Elija un Pais y Estado primero</OPTION></SELECT>";

}

}

  else{

    $sToRender .= "\t<input type=\"hidden\" name=\"" . $this->sUniqueName . "_" . $iRowCount . $i . "_value\" value=\"" . $sql->f($this->aStoreColumnNames[$i]) . "\" />" . $sql->f($this->aDisplayColumnNames[$i])."\n"; }
								}
							}


				//=========================	<<==========

						
							 else {
								$sToRender .= "\t<input type=\"hidden\" name=\"" . $this->sUniqueName . "_" . $iRowCount . $i . "_value\" value=\"" . $sql->f($this->aStoreColumnNames[$i]) . "\" />\n";
							}
							break;
						case 2:
							//output the table column name
							$sToRender .= "\t<input type=\"hidden\" name=\"tc_" . $this->sUniqueName . "_" . $iRowCount . $i . "_tc\" value=\"" . $this->aStoreColumnNames[$i] . "\" />\n";
							//output the column type
							$sToRender .= "\t<input type=\"hidden\" name=\"" . $this->sUniqueName . "_" . $iRowCount . $i . "_type\" value=\"" . $this->aColumnDatabaseTypes[$i] . "\" />\n";
							//output the value
							if ($this->aColumnsVisible[$i]) {
								if ($this->aColumnsEditable[$i]) {
									$sToRender .= "\t<input type=\"checkbox\" name=\"" . $this->sUniqueName . "_" . $iRowCount . $i . "_value\" value=\"". ($sql->f($this->aStoreColumnNames[$i] ? "\" checked" : "0\"")) . " />\n";
								} else {
									$sToRender .= "\t<input type=\"hidden\" name=\"" . $this->sUniqueName . "_" . $iRowCount . $i . "_value\" value=\"" . $sql->f($this->aStoreColumnNames[$i]) . "\" />".$sql->f($this->aDisplayColumnNames[$i])."\n";
								}
							} else {
								$sToRender .= "\t<input type=\"hidden\" name=\"" . $this->sUniqueName . "_" . $iRowCount . $i . "_value\" value=\"" .$sql->f($this->aStoreColumnNames[$i]) . "\" />\n";
							}							
							break;
						case 3:
							$sToRender .= "<b>" . _("The column type for drop downs is not implemented yet") . "</b>\n";
							break;
						case 4:

						  // Codigo uno a muchos

 if (!strcmp($partes[0],"Count")){

								    $sToRender .= "HOLA Febrero 22<br>";

}



		      // $nombre2=$sql->f($this->aDisplayColumnNames[$i]);
	 




  $partes2=explode("_",$nombre);

//=============>>> Codigo creado para ubicar ap.Paterno y generarle la lista dinamica =====>>>>

 $partes23=explode(" ",$nombre);
 if (!strcmp($partes23[1],"Paterno")){

 //=======repeticion del codigo para el caso 4 pero personalizado al caso de apellido paterno======>>>>

	$sToRender .= "<script type=\"text/javascript\" src=\"$default->rootUrl/lib/visualpatterns/validacion.js\"></script>";
                            $sToRender .= "\t<input type=\"hidden\" name=\"" . $this->sUniqueName . "_" . $iRowCount . $i . "_tc\" value=\"" . $this->aStoreColumnNames[$i] . "\" />\n";
							//output the column type
							$sToRender .= "\t<input type=\"hidden\" name=\"" . $this->sUniqueName . "_" . $iRowCount . $i . "_type\" value=\"" . $this->aColumnDatabaseTypes[$i] . "\" />\n";
							if ($this->aColumnsVisible[$i]) {
								if ($this->aColumnsEditable[$i]) {
									$oPattern = & new PatternMetaData2($sql->f($this->aMetaDataFields[$i]), $this->sUniqueName . "_" . $iRowCount . $i . "_value", $sql->f($this->aStoreColumnNames[$i]),"Paterno");
									$sToRender .= $oPattern->render("Paterno");
								} else {
									$sToRender .= "\t<input type=\"hidden\" name=\"" . $this->sUniqueName . "_" . $iRowCount . $i . "_value\" value=\"" . $sql->f($this->aStoreColumnNames[$i]) . "\" />".$sql->f($this->aDisplayColumnNames[$i])."\n";
								}
							} else {
								$sToRender .= "\t<input type=\"hidden\" name=\"" . $this->sUniqueName . "_" . $iRowCount . $i . "_value\" value=\"" . $sql->f($this->aStoreColumnNames[$i]) . "\" />\n";
							}
 //arriba va el codigo de dynamic list
 }
 //===============<<<< ============<<<





 


//==========>>> Inicia caso k_ o caso uno a muchos ===========>>>>
	   elseif  (strncmp($partes2[0],"k",1)===0){
	     
if(strncmp($partes2[1],"Estados",7)===0 || strncmp($partes2[1],"Pais",4)===0){
	   

  if(strncmp($partes2[1],"Pais",4)===0){
/***
    //$sToRender .="HOLA Pais";
 $sToRender .= "<script type=\"text/javascript\" src=\"$default->rootUrl/ajax.js\"></script>\n";
	$sToRender .= "<script type=\"text/javascript\">\n";

	$sToRender .= "var ajax = new Array();\n";

	$sToRender .= "function getEstadosList(sel,nom,iddoc)\n";
	$sToRender .= "{\n";
	$sToRender .= "	var countryCode = sel.options[sel.selectedIndex].value;\n";
        $sToRender .= "countryCode2 = 'us';\n";
	$sToRender .= "	document.getElementById(nom).options.length = 0;	// Empty city select box\n";
	$sToRender .= "	if(countryCode.length>0){\n";
	$sToRender .= "		var index = ajax.length;\n";
	$sToRender .= "		ajax[index] = new sack();\n";
		
	//	$sToRender .= "		ajax[index].requestFile = '$default->rootUrl/presentation/lookAndFeel/knowledgeTree/documentmanagement/getCities.php?countryCode='+countryCode2+'&idd='+iddoc+'&cc='+countryCode;	// Specifying which file to get\n";

	$sToRender .= "	ajax[index].requestFile = '$default->rootUrl/control.php?action=getCities&countryCode='+countryCode2+'&idd='+iddoc+'&cc='+countryCode;\n";

	$sToRender .= "		ajax[index].onCompletion = function(){ createCities(index,nom) };     \n";
	$sToRender .= "		ajax[index].runAJAX();	       \n";
	$sToRender .= "	}\n";
	$sToRender .= "}\n";

	$sToRender .= "function createCities(index,nom)\n";
	$sToRender .= "{\n";
	$sToRender .= "	var obj = document.getElementById(nom);\n";
	$sToRender .= "	eval(ajax[index].response);	\n";
	$sToRender .= "}\n";

		
	$sToRender .= "</script>\n";
**/



}
if(strncmp($partes2[1],"Estados",7)===0){

  // $sToRender .="HOLA ESTADOS";
/***
 $sToRender .= "<script type=\"text/javascript\" src=\"$default->rootUrl/ajax.js\"></script>\n";
	$sToRender .= "<script type=\"text/javascript\">\n";

	$sToRender .= "var ajax = new Array();\n";

	$sToRender .= "function getLugaresList(sel,nom,iddoc)\n";
	$sToRender .= "{\n";
	$sToRender .= "	var countryCode = sel.options[sel.selectedIndex].value;\n";
        $sToRender .= "countryCode2 = 'us';\n";
	$sToRender .= "	document.getElementById(nom).options.length = 0;	// Empty city select box\n";
	$sToRender .= "	if(countryCode.length>0){\n";
	$sToRender .= "		var index = ajax.length;\n";
	$sToRender .= "		ajax[index] = new sack();\n";
		
	//	$sToRender .= "		ajax[index].requestFile = '$default->rootUrl/presentation/lookAndFeel/knowledgeTree/documentmanagement/getCities.php?countryCode='+countryCode2+'&idd='+iddoc+'&cc='+countryCode;	// Specifying which file to get\n";

	$sToRender .= "	ajax[index].requestFile = '$default->rootUrl/control.php?action=getCities&countryCode='+countryCode2+'&idd='+iddoc+'&cc='+countryCode;\n";

	$sToRender .= "		ajax[index].onCompletion = function(){ createCities(index,nom) };     \n";
	$sToRender .= "		ajax[index].runAJAX();	       \n";
	$sToRender .= "	}\n";
	$sToRender .= "}\n";

	$sToRender .= "function createCities(index,nom)\n";
	$sToRender .= "{\n";
	$sToRender .= "	var obj = document.getElementById(nom);\n";
	$sToRender .= "	eval(ajax[index].response);	\n";
	$sToRender .= "}\n";

		
	$sToRender .= "</script>\n";
**/


}}
/**
             $ONE="update debugg set tres =" .'"'."NET_".$partes2[1].'"'."where llave=0";
	     $TWO = mysql_query($ONE);
*/     
	   

	$elIddeMetadata2 = "SELECT  `id` FROM `document_types_lookup` WHERE `name`=\"$partes2[1]\"";
     	$elquerydeMetadata2 = mysql_query($elIddeMetadata2);
	$elId201 = mysql_fetch_row($elquerydeMetadata2);
	
	/**	$ONE1="update debugg set tres =" .'"'."SQL_".$elId201[0].$partes2[1].'"'."where llave=5";
	   $TWO1 = mysql_query($ONE1);
       
	*/					  
	   //if para checar si el nombre trae la primer letra k, despues de un explode			
	

	   //$partes2[0] debe valer 'k'
	   //si vale k entonces 


							//output the table column name
                            $sToRender .= "\t<input type=\"hidden\" name=\"" . $this->sUniqueName . "_" . $iRowCount . $i . "_tc\" value=\"" . $this->aStoreColumnNames[$i] . "\" />\n";
							//output the column type
							$sToRender .= "\t<input type=\"hidden\" name=\"" . $this->sUniqueName . "_" . $iRowCount . $i . "_type\" value=\"" . $this->aColumnDatabaseTypes[$i] . "\" />\n";
							if ($this->aColumnsVisible[$i]) {
								if ($this->aColumnsEditable[$i]) {

					  //**********************aqui hacer un if else ="" si es vacio elid201[0],***>>

									$oPattern = & new PatternMetaData2($sql->f($this->aMetaDataFields[$i]), $this->sUniqueName . "_" . $iRowCount . $i . "_value", $sql->f($this->aStoreColumnNames[$i]),$elId201[0],"nada");									$sToRender .= $oPattern->render("$nombre");
								} else {
									$sToRender .= "\t HOLA <input type=\"hidden\" name=\"" . $this->sUniqueName . "_" . $iRowCount . $i . "_value\" value=\"" . $sql->f($this->aStoreColumnNames[$i]) . "\" />".$sql->f($this->aDisplayColumnNames[$i]). "\n";
								}
							} else {
								$sToRender .= "\t<input type=\"hidden\" name=\"" . $this->sUniqueName . "_" . $iRowCount . $i . "_value\" value=\"" . $sql->f($this->aStoreColumnNames[$i]) . "\" />\n";
							}	
	} 
//=============<<< Termina el caso K_   <<<============


							//abajo ( hasta el break del case ) esta dentro de un else 
                                                     
	   else{
						
	 					
						  //Fin de codigo uno a muchos


							//meta data
							//could either be a drop down or a text field, depending
							
							//output the table column name
                            $sToRender .= "\t<input type=\"hidden\" name=\"" . $this->sUniqueName . "_" . $iRowCount . $i . "_tc\" value=\"" . $this->aStoreColumnNames[$i] . "\" />\n";
							//output the column type
							$sToRender .= "\t<input type=\"hidden\" name=\"" . $this->sUniqueName . "_" . $iRowCount . $i . "_type\" value=\"" . $this->aColumnDatabaseTypes[$i] . "\" />\n";
							
							if ($this->aColumnsVisible[$i]) {
								if ($this->aColumnsEditable[$i]) {

                  		 //=============== if para category ===============>>
//=============>> en esta parte lo que se realiza con el if es quitar la parte de Category de la parte de AddDoc ======>>



								  if (!strcmp($partes[0],"Category")){
								    $sToRender .= "\t<input type=\"hidden\" name=\"" . $this->sUniqueName . "_" . $iRowCount . $i . "_value\" value=\"" . $this->aColumnDatabaseTypes[$i] . "\" />\n";
						} 


else{	




	//=============>>>> CASO PARA FECHA CALENDARIO ================>>>				 

	if (!strcmp($partes[0],"Fecha")){
	  $oPattern = & new PatternMetaData2($sql->f($this->aMetaDataFields[$i]), $this->sUniqueName . "_" . $iRowCount . $i . "_value", $sql->f($this->aStoreColumnNames[$i]),$elId201[0],"Fecha");
						  $sToRender .= $oPattern->render("Fecha");
} 

//=============>>>> TERMINA CASO PARA FECHA CALENDARIO ================>>>

//=============>>>> CASO PARA NOMBRE VALIDACION ================>>>
	elseif (!strcmp($partes[0],"Nombre")){
	  $oPattern = & new PatternMetaData2($sql->f($this->aMetaDataFields[$i]), $this->sUniqueName . "_" . $iRowCount . $i . "_value", $sql->f($this->aStoreColumnNames[$i]),$elId201[0],"Nombre");
						  $sToRender .= $oPattern->render("Nombre");
} 

	else if (!strcmp($partes23[1],"Materno")){
	  $oPattern = & new PatternMetaData2($sql->f($this->aMetaDataFields[$i]), $this->sUniqueName . "_" . $iRowCount . $i . "_value", $sql->f($this->aStoreColumnNames[$i]),$elId201[0],"Materno");
						  $sToRender .= $oPattern->render("Materno");
	}

	else if (!strcmp($partes[0],"Organizacion")){
	  $oPattern = & new PatternMetaData2($sql->f($this->aMetaDataFields[$i]), $this->sUniqueName . "_" . $iRowCount . $i . "_value", $sql->f($this->aStoreColumnNames[$i]),$elId201[0],"Organizacion");
						  $sToRender .= $oPattern->render("Organizacion");
	}

	else if (!strcmp($partes[0],"Puesto")){
	  $oPattern = & new PatternMetaData2($sql->f($this->aMetaDataFields[$i]), $this->sUniqueName . "_" . $iRowCount . $i . "_value", $sql->f($this->aStoreColumnNames[$i]),$elId201[0],"Puesto");
						  $sToRender .= $oPattern->render("Puesto");
	}
 
/**
	elseif (!strcmp($partes[0],"Telefono")){
	  $oPattern = & new PatternMetaData2($sql->f($this->aMetaDataFields[$i]), $this->sUniqueName . "_" . $iRowCount . $i . "_value", $sql->f($this->aStoreColumnNames[$i]),$elId201[0],"Telefono");
						  $sToRender .= $oPattern->render("Telefono");
} 
*/
	
	else if (!strcmp($partes[0],"Correo")){
	  $oPattern = & new PatternMetaData2($sql->f($this->aMetaDataFields[$i]), $this->sUniqueName . "_" . $iRowCount . $i . "_value", $sql->f($this->aStoreColumnNames[$i]),$elId201[0],"Correo");
						  $sToRender .= $oPattern->render("Correo");
	}
	//=============>>>>TERMINA CASO PARA NOMBRE VALIDACION ================>>>


else {

					 
						  $oPattern = & new PatternMetaData($sql->f($this->aMetaDataFields[$i]), $this->sUniqueName . "_" . $iRowCount . $i . "_value", $sql->f($this->aStoreColumnNames[$i]));
						  $sToRender .= $oPattern->render();
}



}
 							
					
								

	//*******************************					************************************//
		/*codigo FElipe */		      
 //========== en esta parte se le integra al campo fecha una accion con calendario  ===========>>
 

							 
 if (!strcmp($partes[0],"Fecha")){

   /**   
   echo "
<script type='text/JavaScript' src='$default->rootUrl/lib/visualpatterns/calendario.js'></script>
<input onclick='scwShow(this,event);' value='---' /><img src=\"$default->graphicsUrl/calendar/calendar.gif\" name=\"imgCalendar\" width=\"34\" height=\"21\" border=\"0\" alt=\"\">$this->sUniqueName</a>
 ";
*/
   //<a href='#' onclick='scwShow(this,event);return false;'>




$sToRender .= "<script type=\"text/javascript\" src=\"$default->rootUrl/lib/visualpatterns/calendario.js\"></script>";
/**
$sToRender .="<a href='#' onMouseOver='scwShow(this, event);'><img src=\"$default->graphicsUrl/calendar/calendar.gif\" name=\"imgCalendar\" width=\"34\" height=\"21\" border=\"0\" alt=\"\"></a>";
**/
  // $sToRender .= "&nbsp;&nbsp;<a href='javascript:scwShow(this,event);return false;'><img src=\"$default->graphicsUrl/calendar/calendar.gif\" name=\"imgCalendar\" width=\"34\" height=\"21\" bor der=\"0\" alt=\"\"></a>";
   
 /**
 $sToRender .= "&nbsp;&nbsp;<a href=\"javascript:show_calendar('MainForm." . $this->sUniqueName . "_" . $iRowCount . $i . "_value"  . "',null,null,'YYYY-MM-DD', false);\" onmouseover=\"window.status='Date Picker';return true;\" onmouseout=\"window.status='';return true;\"><img src=\"$default->graphicsUrl/calendar/calendar.gif\" name=\"imgCalendar\" width=\"34\" height=\"21\" border=\"0\" alt=\"\"></a>";
 */

//*****************************
						}	}	 else {
									$sToRender .= "\t<input type=\"hidden\" name=\"" . $this->sUniqueName . "_" . $iRowCount . $i . "_value\" value=\"" . $sql->f($this->aStoreColumnNames[$i]) . "\" />".$sql->f($this->aDisplayColumnNames[$i])."\n";
								}
							} else {
								$sToRender .= "\t<input type=\"hidden\" name=\"" . $this->sUniqueName . "_" . $iRowCount . $i . "_value\" value=\"" . $sql->f($this->aStoreColumnNames[$i]) . "\" />\n";
							} }							
							break;
							
							break;
						default:							
							$sToRender .= "<b>" .
                                sprintf(_("You are attempting to render an unknown column type %s in PatternEditableTableSqlQuery"),
                                    ($this->aColumnTypes[$i])) .
                                "</b>\n";
							break;
					}

					$sToRender .= "\t</td>\n";
				}
				$sToRender .= "<input type=\"hidden\" name=\"unique_end_" . $this->sUniqueName . $iRowCount . "\" value=\"\" />\n";
				$sToRender .= "</tr>\n";
				$iRowCount++;
			}
		}
		$sToRender .= "</table>";
		//$sToRender .= $partes2[0]
		if (isset($this->aRequiredVariables)) {
			if ($this->bRenderJavascriptValidation) {
				$sToRender .= $this->generateRequiredFieldValidation($this->aRequiredVariables);
			}
		}
		return $sToRender;
	}
	
	function generateRequiredFieldValidation($aValidationColumnNames) {
		$sToRender .= "\n\n<script language=\"javascript\">\n<!--\n";
		$sToRender .= "function validateForm(theForm) {\n";
		for ($i = 0; $i < count($aValidationColumnNames); $i++) {
            $sToRender .= "\tif (!(validRequired(document.MainForm." . $aValidationColumnNames[$i]["formName"] . ", 'selected'))) {\n";
            $sToRender .= "\t\treturn false;\n\t}\n";
		}
		$sToRender .= "return true;\n}\n";
		$sToRender .= "//-->\n</script>\n\n";
		return $sToRender;
	}
	
	function getValidationJavascript() {
		for ($i = 0; $i < count($this->aRequiredVariables); $i++) {
            $sToRender .= "\tif (!(validRequired(document.MainForm." . $this->aRequiredVariables[$i]["formName"] . ", 'selected'))) {\n";
            $sToRender .= "\t\treturn false;\n\t}\n";
		}
		return $sToRender;
	}
}
?>
